/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * MainFrame.java
 *
 * Created on Mar 13, 2011, 11:30:45 AM
 */

package genapp;

//import org.jdesktop.application.Action;
import java.io.*;
import java.util.Scanner;

/**
 *
 * @author razor
 */
public class MainFrame extends javax.swing.JFrame {

    /** Creates new form MainFrame */
    public MainFrame() {
        initComponents();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtOut = new javax.swing.JTextArea();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setName("Form"); // NOI18N
        setResizable(false);

        //org.jdesktop.application.ResourceMap resourceMap = org.jdesktop.application.Application.getInstance().getContext().getResourceMap(MainFrame.class);
        jLabel1.setText("File Contents"); // NOI18N
        jLabel1.setName("jLabel1"); // NOI18N

        jScrollPane1.setName("jScrollPane1"); // NOI18N

        txtOut.setColumns(20);
        txtOut.setEditable(false);
        txtOut.setLineWrap(true);
        txtOut.setRows(5);
        txtOut.setText("Generate to create a new file of random hex numbers.\nRead to read a previously created file,\n and Del to delete the file."); // NOI18N
        txtOut.setName("txtOut"); // NOI18N
        jScrollPane1.setViewportView(txtOut);

        //javax.swing.ActionMap actionMap = org.jdesktop.application.Application.getInstance().getContext().getActionMap(MainFrame.class, this);
        jButton1.setAction(callGen()); // NOI18N
        jButton1.setName("jButton1"); // NOI18N

        jButton2.setAction(callRead); // NOI18N
        jButton2.setName("jButton2"); // NOI18N

        jButton3.setAction(callDel); // NOI18N
        jButton3.setName("jButton3"); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 257, Short.MAX_VALUE)
                    .addComponent(jLabel1)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jButton1)
                        .addGap(18, 18, 18)
                        .addComponent(jButton2)
                        .addGap(18, 18, 18)
                        .addComponent(jButton3)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 217, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(jButton2)
                    .addComponent(jButton3))
                .addContainerGap(15, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
    * @param args the command line arguments
    */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MainFrame().setVisible(true);
            }
        });
    }

	
	//@Action
    public void callGen() {
        System.out.println("testgen");
        txtOut.append("test");
    }

    //@Action
    public void callRead() {
        System.out.println("testread");
        
    }

    //@Action
    public void callDel() {
        System.out.println("testdel");
        Delete del = new Delete();
        del.deleteTxt();
    }

public void FileGen() {
    
}
    
public class ReaderWriter {
    private String writestr;
    ReaderWriter() {
        //no args
    }
    ReaderWriter(String toWrite) {
        //overloaded constructor w/ stuff to write immediately
        writestr = toWrite;
    }
    public void readfile() {
        
    }
    public void writefile() throws IOException {
        Writer out = new OutputStreamWriter(new FileOutputStream(fileName));
        try {
            out.write(writestr);
        }
        finally {
            out.close();
        }
    }
    
    //this method is overloaded and can be called if the ReaderWriter was not initialized w/ a string.
    public void writefile(String toWrite) throws IOException {
        Writer out = new OutputStreamWriter(new FileOutputStream(fileName));
        try {
            out.write(toWrite);
        }
        finally {
            out.close();
        }
    }
    
}    
    
public class Delete {
    public void deleteTxt() {
        // A File object to represent the filename
        File f = new File(fileName);
        
        // Make sure the file exists and isn't write protected
        if (!f.exists())
            txtOut.setText(fileName + " does not exist.");

        if (!f.canWrite())
            txtOut.setText(fileName + " is write protected.");

        // Attempt to delete it
        boolean success = f.delete();

        if (!success)
        txtOut.setText(fileName + " failed to delete.");
    }
}
    
    //This is the constant variable.
    public final String fileName = "rand.txt";
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    public javax.swing.JTextArea txtOut;
    // End of variables declaration//GEN-END:variables

}
